{
  "{\"sourceRoot\":\"/Users/Student/Desktop/Talos\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Student/Desktop/Talos\",\"filename\":\"/Users/Student/Desktop/Talos/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Student/Desktop/Talos\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Student/Desktop/Talos",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Student/Desktop/Talos",
      "filename": "/Users/Student/Desktop/Talos/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Student/Desktop/Talos",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Student/Desktop/Talos/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Student/Desktop/Talos/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Student/Desktop/Talos",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _johnnyFive = require(\"johnny-five\");\n\n// Set `lightOn` to true as a default since our LED will be on\nvar lightOn = true; // Make a new Board Instance\n\nvar board = new _johnnyFive.Board(); //When the board's connected, turn on the LED connected to pin 9\n\nboard.on('ready', function () {\n  console.log('[johnny-five] Board is ready.'); //Make a new Led object and connect it to pin 9\n\n  var led = new _johnnyFive.Led(9);\n  var pushButton = new _johnnyFive.Button({\n    pin: 7,\n    isPullup: true\n  }); // Switch it on!\n  //Might need 9 in ()\n\n  led.on(); //If the button is pressed, toggle the LED on or Off.\n  //Allows software to change values of light on and off when hardware...\n  //buttons are pressed and will inform you if the light is already on...\n  //or off.\n\n  pushButton.on('down', function () {\n    if (lightOn) {\n      led.off();\n      lightOn = false;\n    } else {\n      led.on();\n      lightOn = true;\n    }\n  });\n  this.repl.inject({\n    //Control the Led via calling for the objects\n    led: led,\n    switchOn: function switchOn() {\n      if (lightOn) {\n        console.log('[johnny-five] LED is already on!');\n      } else {\n        led.on();\n        lightOn = true;\n      }\n    },\n    switchOff: function switchOff() {\n      if (!lightOn) {\n        console.log('[johnny-five] LED is already off!');\n      } else {\n        led.stop().off();\n        lightOn = false;\n      }\n    }\n  }); // commands = led.on(9), led.off(9),led.pulse(2000), led.stop(9)\n  //When the board is closing, stop any LED animations and turn it off\n\n  this.on('exit', function () {\n    led.stop().off();\n    console.log('[johnny-five] Bye Bye.');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImxpZ2h0T24iLCJib2FyZCIsIkJvYXJkIiwib24iLCJjb25zb2xlIiwibG9nIiwibGVkIiwiTGVkIiwicHVzaEJ1dHRvbiIsIkJ1dHRvbiIsInBpbiIsImlzUHVsbHVwIiwib2ZmIiwicmVwbCIsImluamVjdCIsInN3aXRjaE9uIiwic3dpdGNoT2ZmIiwic3RvcCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQTtBQUNBLElBQUlBLE9BQU8sR0FBRyxJQUFkLEMsQ0FFQTs7QUFDQSxJQUFNQyxLQUFLLEdBQUcsSUFBSUMsaUJBQUosRUFBZCxDLENBQ0E7O0FBQ0FELEtBQUssQ0FBQ0UsRUFBTixDQUFTLE9BQVQsRUFBa0IsWUFBVztBQUMzQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksK0JBQVosRUFEMkIsQ0FHM0I7O0FBQ0YsTUFBTUMsR0FBRyxHQUFHLElBQUlDLGVBQUosQ0FBUSxDQUFSLENBQVo7QUFFRSxNQUFNQyxVQUFVLEdBQUcsSUFBSUMsa0JBQUosQ0FBVztBQUM1QkMsSUFBQUEsR0FBRyxFQUFFLENBRHVCO0FBRTVCQyxJQUFBQSxRQUFRLEVBQUU7QUFGa0IsR0FBWCxDQUFuQixDQU4yQixDQVkzQjtBQUNBOztBQUNBTCxFQUFBQSxHQUFHLENBQUNILEVBQUosR0FkMkIsQ0FnQjNCO0FBQ0E7QUFDQTtBQUNBOztBQUVBSyxFQUFBQSxVQUFVLENBQUNMLEVBQVgsQ0FBYyxNQUFkLEVBQXNCLFlBQVk7QUFDaEMsUUFBSUgsT0FBSixFQUFhO0FBQ1hNLE1BQUFBLEdBQUcsQ0FBQ00sR0FBSjtBQUNBWixNQUFBQSxPQUFPLEdBQUcsS0FBVjtBQUNELEtBSEQsTUFHTztBQUNMTSxNQUFBQSxHQUFHLENBQUNILEVBQUo7QUFDQUgsTUFBQUEsT0FBTyxHQUFHLElBQVY7QUFFSDtBQUVGLEdBVkM7QUFXQSxPQUFLYSxJQUFMLENBQVVDLE1BQVYsQ0FBaUI7QUFDZjtBQUNBUixJQUFBQSxHQUFHLEVBQUVBLEdBRlU7QUFJZlMsSUFBQUEsUUFBUSxFQUFFLG9CQUFXO0FBQ25CLFVBQUlmLE9BQUosRUFBYTtBQUNYSSxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxrQ0FBWjtBQUNELE9BRkQsTUFFTztBQUNMQyxRQUFBQSxHQUFHLENBQUNILEVBQUo7QUFDQUgsUUFBQUEsT0FBTyxHQUFHLElBQVY7QUFDRDtBQUNGLEtBWGM7QUFhZmdCLElBQUFBLFNBQVMsRUFBRSxxQkFBVztBQUNwQixVQUFJLENBQUNoQixPQUFMLEVBQWM7QUFDWkksUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUNBQVo7QUFDRCxPQUZELE1BRU87QUFDTEMsUUFBQUEsR0FBRyxDQUFDVyxJQUFKLEdBQVdMLEdBQVg7QUFDQVosUUFBQUEsT0FBTyxHQUFHLEtBQVY7QUFDRDtBQUNGO0FBcEJjLEdBQWpCLEVBaEMyQixDQXNEM0I7QUFDQTs7QUFDQSxPQUFLRyxFQUFMLENBQVEsTUFBUixFQUFnQixZQUFXO0FBQ3pCRyxJQUFBQSxHQUFHLENBQUNXLElBQUosR0FBV0wsR0FBWDtBQUNBUixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx3QkFBWjtBQUNELEdBSEQ7QUFJRCxDQTVERCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvU3R1ZGVudC9EZXNrdG9wL1RhbG9zIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9hcmQsIExlZCwgQnV0dG9uIH0gZnJvbSAnam9obm55LWZpdmUnO1xuXG4vLyBTZXQgYGxpZ2h0T25gIHRvIHRydWUgYXMgYSBkZWZhdWx0IHNpbmNlIG91ciBMRUQgd2lsbCBiZSBvblxubGV0IGxpZ2h0T24gPSB0cnVlO1xuXG4vLyBNYWtlIGEgbmV3IEJvYXJkIEluc3RhbmNlXG5jb25zdCBib2FyZCA9IG5ldyBCb2FyZCgpO1xuLy9XaGVuIHRoZSBib2FyZCdzIGNvbm5lY3RlZCwgdHVybiBvbiB0aGUgTEVEIGNvbm5lY3RlZCB0byBwaW4gOVxuYm9hcmQub24oJ3JlYWR5JywgZnVuY3Rpb24oKSB7XG4gIGNvbnNvbGUubG9nKCdbam9obm55LWZpdmVdIEJvYXJkIGlzIHJlYWR5LicpO1xuXG4gIC8vTWFrZSBhIG5ldyBMZWQgb2JqZWN0IGFuZCBjb25uZWN0IGl0IHRvIHBpbiA5XG5jb25zdCBsZWQgPSBuZXcgTGVkKDkpO1xuXG4gIGNvbnN0IHB1c2hCdXR0b24gPSBuZXcgQnV0dG9uKHtcbiAgICBwaW46IDcsXG4gICAgaXNQdWxsdXA6IHRydWUsXG5cbiAgfSk7XG5cbiAgLy8gU3dpdGNoIGl0IG9uIVxuICAvL01pZ2h0IG5lZWQgOSBpbiAoKVxuICBsZWQub24oKTtcblxuICAvL0lmIHRoZSBidXR0b24gaXMgcHJlc3NlZCwgdG9nZ2xlIHRoZSBMRUQgb24gb3IgT2ZmLlxuICAvL0FsbG93cyBzb2Z0d2FyZSB0byBjaGFuZ2UgdmFsdWVzIG9mIGxpZ2h0IG9uIGFuZCBvZmYgd2hlbiBoYXJkd2FyZS4uLlxuICAvL2J1dHRvbnMgYXJlIHByZXNzZWQgYW5kIHdpbGwgaW5mb3JtIHlvdSBpZiB0aGUgbGlnaHQgaXMgYWxyZWFkeSBvbi4uLlxuICAvL29yIG9mZi5cblxuICBwdXNoQnV0dG9uLm9uKCdkb3duJywgZnVuY3Rpb24gKCkge1xuICAgIGlmIChsaWdodE9uKSB7XG4gICAgICBsZWQub2ZmKCk7XG4gICAgICBsaWdodE9uID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxlZC5vbigpO1xuICAgICAgbGlnaHRPbiA9IHRydWU7XG5cbiAgfVxuXG59KTtcbiAgdGhpcy5yZXBsLmluamVjdCh7XG4gICAgLy9Db250cm9sIHRoZSBMZWQgdmlhIGNhbGxpbmcgZm9yIHRoZSBvYmplY3RzXG4gICAgbGVkOiBsZWQsXG5cbiAgICBzd2l0Y2hPbjogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAobGlnaHRPbikge1xuICAgICAgICBjb25zb2xlLmxvZygnW2pvaG5ueS1maXZlXSBMRUQgaXMgYWxyZWFkeSBvbiEnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxlZC5vbigpO1xuICAgICAgICBsaWdodE9uID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc3dpdGNoT2ZmOiBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghbGlnaHRPbikge1xuICAgICAgICBjb25zb2xlLmxvZygnW2pvaG5ueS1maXZlXSBMRUQgaXMgYWxyZWFkeSBvZmYhJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZWQuc3RvcCgpLm9mZigpO1xuICAgICAgICBsaWdodE9uID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgLy8gY29tbWFuZHMgPSBsZWQub24oOSksIGxlZC5vZmYoOSksbGVkLnB1bHNlKDIwMDApLCBsZWQuc3RvcCg5KVxuICAvL1doZW4gdGhlIGJvYXJkIGlzIGNsb3NpbmcsIHN0b3AgYW55IExFRCBhbmltYXRpb25zIGFuZCB0dXJuIGl0IG9mZlxuICB0aGlzLm9uKCdleGl0JywgZnVuY3Rpb24oKSB7XG4gICAgbGVkLnN0b3AoKS5vZmYoKTtcbiAgICBjb25zb2xlLmxvZygnW2pvaG5ueS1maXZlXSBCeWUgQnllLicpO1xuICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "lightOn",
        "board",
        "Board",
        "on",
        "console",
        "log",
        "led",
        "Led",
        "pushButton",
        "Button",
        "pin",
        "isPullup",
        "off",
        "repl",
        "inject",
        "switchOn",
        "switchOff",
        "stop"
      ],
      "mappings": ";;AAAA;;AAEA;AACA,IAAIA,OAAO,GAAG,IAAd,C,CAEA;;AACA,IAAMC,KAAK,GAAG,IAAIC,iBAAJ,EAAd,C,CACA;;AACAD,KAAK,CAACE,EAAN,CAAS,OAAT,EAAkB,YAAW;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAD2B,CAG3B;;AACF,MAAMC,GAAG,GAAG,IAAIC,eAAJ,CAAQ,CAAR,CAAZ;AAEE,MAAMC,UAAU,GAAG,IAAIC,kBAAJ,CAAW;AAC5BC,IAAAA,GAAG,EAAE,CADuB;AAE5BC,IAAAA,QAAQ,EAAE;AAFkB,GAAX,CAAnB,CAN2B,CAY3B;AACA;;AACAL,EAAAA,GAAG,CAACH,EAAJ,GAd2B,CAgB3B;AACA;AACA;AACA;;AAEAK,EAAAA,UAAU,CAACL,EAAX,CAAc,MAAd,EAAsB,YAAY;AAChC,QAAIH,OAAJ,EAAa;AACXM,MAAAA,GAAG,CAACM,GAAJ;AACAZ,MAAAA,OAAO,GAAG,KAAV;AACD,KAHD,MAGO;AACLM,MAAAA,GAAG,CAACH,EAAJ;AACAH,MAAAA,OAAO,GAAG,IAAV;AAEH;AAEF,GAVC;AAWA,OAAKa,IAAL,CAAUC,MAAV,CAAiB;AACf;AACAR,IAAAA,GAAG,EAAEA,GAFU;AAIfS,IAAAA,QAAQ,EAAE,oBAAW;AACnB,UAAIf,OAAJ,EAAa;AACXI,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,OAFD,MAEO;AACLC,QAAAA,GAAG,CAACH,EAAJ;AACAH,QAAAA,OAAO,GAAG,IAAV;AACD;AACF,KAXc;AAafgB,IAAAA,SAAS,EAAE,qBAAW;AACpB,UAAI,CAAChB,OAAL,EAAc;AACZI,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD,OAFD,MAEO;AACLC,QAAAA,GAAG,CAACW,IAAJ,GAAWL,GAAX;AACAZ,QAAAA,OAAO,GAAG,KAAV;AACD;AACF;AApBc,GAAjB,EAhC2B,CAsD3B;AACA;;AACA,OAAKG,EAAL,CAAQ,MAAR,EAAgB,YAAW;AACzBG,IAAAA,GAAG,CAACW,IAAJ,GAAWL,GAAX;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,GAHD;AAID,CA5DD",
      "sourceRoot": "/Users/Student/Desktop/Talos",
      "sourcesContent": [
        "import { Board, Led, Button } from 'johnny-five';\n\n// Set `lightOn` to true as a default since our LED will be on\nlet lightOn = true;\n\n// Make a new Board Instance\nconst board = new Board();\n//When the board's connected, turn on the LED connected to pin 9\nboard.on('ready', function() {\n  console.log('[johnny-five] Board is ready.');\n\n  //Make a new Led object and connect it to pin 9\nconst led = new Led(9);\n\n  const pushButton = new Button({\n    pin: 7,\n    isPullup: true,\n\n  });\n\n  // Switch it on!\n  //Might need 9 in ()\n  led.on();\n\n  //If the button is pressed, toggle the LED on or Off.\n  //Allows software to change values of light on and off when hardware...\n  //buttons are pressed and will inform you if the light is already on...\n  //or off.\n\n  pushButton.on('down', function () {\n    if (lightOn) {\n      led.off();\n      lightOn = false;\n    } else {\n      led.on();\n      lightOn = true;\n\n  }\n\n});\n  this.repl.inject({\n    //Control the Led via calling for the objects\n    led: led,\n\n    switchOn: function() {\n      if (lightOn) {\n        console.log('[johnny-five] LED is already on!');\n      } else {\n        led.on();\n        lightOn = true;\n      }\n    },\n\n    switchOff: function() {\n      if (!lightOn) {\n        console.log('[johnny-five] LED is already off!');\n      } else {\n        led.stop().off();\n        lightOn = false;\n      }\n    }\n  });\n  // commands = led.on(9), led.off(9),led.pulse(2000), led.stop(9)\n  //When the board is closing, stop any LED animations and turn it off\n  this.on('exit', function() {\n    led.stop().off();\n    console.log('[johnny-five] Bye Bye.');\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578573194452
  }
}